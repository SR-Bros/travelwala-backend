name: Travelwala GitHub Pipeline

on:
  push:
    branches:
      - main

jobs:
  maven-package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dspring.profiles.active=prod -DskipTests

      - uses: actions/upload-artifact@master
        with:
          name: travelwala-artifact
          path: target/*.jar
  docker:
    needs: [maven-package]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Cache Docker Image Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: actions/download-artifact@master
        with:
          name: travelwala-artifact

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/travelwala
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy_production:
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: Create SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_KEY_PATH: ssh_key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ssh_key
          sudo chmod 600 ssh_key
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          echo "Deploying via remote SSH"
          ssh -i ssh_key root@${{ secrets.SERVER_IP }} \
            "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/travelwala:latest \
            && docker stop live-container \
            && docker rm live-container \
            && docker run --init -d --name live-container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/travelwala:latest \
            && docker system prune -af"
