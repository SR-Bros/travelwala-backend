name: Travelwala GitHub Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_PATH: ${{ secrets.IMAGE_PATH }}
  PROFILE: prod

jobs:
  jib-package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with JIB
        run: |
          mvn compile jib:build \
          -Dimage=${{ env.IMAGE_PATH }} \
          -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} \
          -Djib.to.auth.password=${{ secrets.DOCKERHUB_PASSWORD }} \
          -DSPRING_PROFILE=${{ env.PROFILE }}

  deploy_production:
    runs-on: ubuntu-latest
    needs: [jib-package]
    steps:
      - name: Create SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_KEY_PATH: ssh_key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ssh_key
          sudo chmod 600 ssh_key
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          echo "Deploying via remote SSH"
          ssh -i ssh_key root@${{ secrets.SERVER_IP }} \
            "docker pull ${{ env.IMAGE_PATH }}:latest \
            && docker stop live-container \
            && docker rm live-container \
            && docker run --init -d --name live-container -p 8080:8080 ${{ env.IMAGE_PATH }}:latest \
            && docker system prune -af"
